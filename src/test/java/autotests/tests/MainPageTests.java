package autotests.tests;

import autotests.helpers.DriverUtils;
import com.codeborne.selenide.Condition;
import io.qameta.allure.Description;
import io.qameta.allure.Owner;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;

import static com.codeborne.selenide.Selenide.*;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;

@Owner("vvelichko")

public class MainPageTests extends TestBase {

    @Test
    @Tag("UI")
    @Description("Тест для главной страницы")
    @DisplayName("Главная страница содержит заголовок")
    void MainPageTitleTest() {
        step("Открываем страницу kupithai.ru", () ->
                open("https://kupithai.ru/"));

        step("Заголовок содержит текст: <expectedTitle>", () -> {
            String expectedTitle = "Тайская косметика купить в интернет магазине в Москве | Товары из Тайланда";
            String actualTitle = title();

            assertThat(actualTitle).isEqualTo(expectedTitle);
            System.out.println(actualTitle);
        });
    }

    @Test
    @Tag("UI")
    @Description("Тест для главной страницы")
    @DisplayName("На странице отображается главный форма")
    void MainPageMainFormVisibleTest() {
        step("Открываем страницу kupithai.ru", () ->
                open("https://kupithai.ru/"));

        step("Проверяем что отображается главная форма", () ->
                $(By.id("common-home")).shouldBe(Condition.visible));
    }

    @Test
    @Tag("UI")
    @Description("Тест для главной страницы")
    @DisplayName("На странице отображается главный заголовок")
    void MainPageHaveTitleTest() {
        step("Открываем страницу kupithai.ru", () ->
                open("https://kupithai.ru/"));

        step("Проверяем что заголовок страницы видимый", () ->
                $(By.className("us-main-shop-title")).shouldBe(Condition.visible));

        step("Заголовок страницы содержит текст: 'Тайская косметика и товары из Тайланда'", () -> {
            String expectedText = "Тайская косметика и товары из Тайланда";
            $(By.id("common-home")).$(By.className("us-main-shop-title")).shouldHave(Condition.text(expectedText));
        });
    }

    @Test
    @Tag("UI")
    @Description("Тест для главной страницы")
    @DisplayName("Негативный кейс. Заголовок содержит неверный текст")
    void generatedTest() {
        step("Открываем страницу kupithai.ru", () ->
                open("https://kupithai.ru/"));

        step("Проверяем что заголовок страницы видимый", () ->
                $(By.className("us-main-shop-title")).shouldBe(Condition.visible));

        step("Заголовок страницы содержит неверный текст", () -> {
            String expectedText = "Тайская косметика и товары";
            assertThat($(By.className("us-main-shop-title")).shouldHave(Condition.text(expectedText)));
        });
    }


    @Test
    @Description("Autogenerated test")
    @DisplayName("Page title should have header text")
    void titleTest() {
        step("Open url 'https://kupithai.ru/'", () ->
                open("https://kupithai.ru/"));

        step("Page title should have text 'Тайская косметика купить в интернет магазине в Москве | Товары из Тайланда'", () -> {
            String expectedTitle = "Тайская косметика купить в интернет магазине в Москве | Товары из Тайланда";
            String actualTitle = title();

            assertThat(actualTitle).isEqualTo(expectedTitle);
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Page console log should not have errors")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://kupithai.ru/'", () ->
                open("https://kupithai.ru/"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }
}